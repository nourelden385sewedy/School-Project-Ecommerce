// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School_ECommerce.Data;

#nullable disable

namespace School_ECommerce.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20251001202641_FirstMig")]
    partial class FirstMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School_ECommerce.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Gadgets and devices",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fiction, non-fiction and more",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Men and Women apparel",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@example.com",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@example.com",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie@example.com",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.CustomerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateofBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CustomerId = 1,
                            DateofBirth = new DateOnly(1990, 5, 1),
                            Name = "Alice",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            CustomerId = 2,
                            DateofBirth = new DateOnly(1985, 10, 12),
                            Name = "Bob",
                            PhoneNumber = "9876543210"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd",
                            CustomerId = 3,
                            DateofBirth = new DateOnly(1995, 2, 20),
                            Name = "Charlie",
                            PhoneNumber = "5551234567"
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(8, 3)
                        .HasColumnType("decimal(8,3)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DeliveryTime = new DateTime(2025, 10, 4, 20, 26, 41, 16, DateTimeKind.Utc).AddTicks(5165),
                            OrderId = new Guid("11111111-1111-1111-1111-111111111111"),
                            TotalPrice = 1649.47m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DeliveryTime = new DateTime(2025, 10, 3, 20, 26, 41, 16, DateTimeKind.Utc).AddTicks(5171),
                            OrderId = new Guid("22222222-2222-2222-2222-222222222222"),
                            TotalPrice = 89.98m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            DeliveryTime = new DateTime(2025, 10, 3, 20, 26, 41, 16, DateTimeKind.Utc).AddTicks(5178),
                            OrderId = new Guid("33333333-3333-3333-3333-333333333333"),
                            TotalPrice = 79.98m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1,
                            DeliveryTime = new DateTime(2025, 10, 6, 20, 26, 41, 16, DateTimeKind.Utc).AddTicks(5182),
                            OrderId = new Guid("44444444-4444-4444-4444-444444444444"),
                            TotalPrice = 139.98m
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtOrder")
                        .HasPrecision(8, 3)
                        .HasColumnType("decimal(8,3)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            OrderId = 1,
                            PriceAtOrder = 999.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            OrderId = 1,
                            PriceAtOrder = 599.49m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1,
                            OrderId = 1,
                            PriceAtOrder = 49.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2,
                            OrderId = 2,
                            PriceAtOrder = 19.99m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1,
                            OrderId = 2,
                            PriceAtOrder = 49.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 6,
                            Amount = 2,
                            OrderId = 3,
                            PriceAtOrder = 39.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 7,
                            Amount = 2,
                            OrderId = 4,
                            PriceAtOrder = 29.99m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 8,
                            Amount = 1,
                            OrderId = 4,
                            PriceAtOrder = 79.99m,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 3)
                        .HasColumnType("decimal(8,3)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 100,
                            CategoryId = 1,
                            Name = "Smartphone",
                            Price = 599.49m
                        },
                        new
                        {
                            Id = 3,
                            Amount = 200,
                            CategoryId = 1,
                            Name = "Headphones",
                            Price = 149.99m
                        },
                        new
                        {
                            Id = 4,
                            Amount = 75,
                            CategoryId = 2,
                            Name = "C# Programming",
                            Price = 39.99m
                        },
                        new
                        {
                            Id = 5,
                            Amount = 60,
                            CategoryId = 2,
                            Name = "ASP.NET Core Guide",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 6,
                            Amount = 80,
                            CategoryId = 2,
                            Name = "Database Design",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = 7,
                            Amount = 150,
                            CategoryId = 3,
                            Name = "T-Shirt",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 8,
                            Amount = 120,
                            CategoryId = 3,
                            Name = "Jeans",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = 9,
                            Amount = 70,
                            CategoryId = 3,
                            Name = "Jacket",
                            Price = 89.99m
                        });
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.CustomerProfile", b =>
                {
                    b.HasOne("School_ECommerce.Data.Models.Customer", "Customer")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("School_ECommerce.Data.Models.CustomerProfile", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Order", b =>
                {
                    b.HasOne("School_ECommerce.Data.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.OrderItem", b =>
                {
                    b.HasOne("School_ECommerce.Data.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_ECommerce.Data.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Product", b =>
                {
                    b.HasOne("School_ECommerce.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Customer", b =>
                {
                    b.Navigation("CustomerProfile")
                        .IsRequired();

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("School_ECommerce.Data.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
